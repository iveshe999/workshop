# Load the necessary libraries
library(boot)
# Load the data
housing.df <- read.csv("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-10/BostonHousing.csv")
# First six rows
head(housing.df)
# Column names
names(housing.df)
# Fit a regression on the training set
glm1 <- glm(MEDV ~ poly(DIS, 3), data = housing.df)
summary(glm1)
# Compute the leave-one-out cross-validation prediction error
loocv.err1 <- cv.glm(housing.df, glm1)
loocv.err1$delta[1]  # Cross-validated MSE
# Fit a regression on the training set
glm2 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4), data = housing.df)
summary(glm2)
# Compute the leave-one-out cross-validation prediction error
loocv.err2 <- cv.glm(housing.df, glm2)
loocv.err2$delta[1]  # Cross-validated MSE
# Fit a regression on the training set
glm3 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4) + poly(CRIM, 5), data = housing.df)
summary(glm3)
# Compute the leave-one-out cross-validation prediction error
loocv.err3 <- cv.glm(housing.df, glm3)
loocv.err3$delta[1]  # Cross-validated MSE
# Compare the MSE for the three models
cat("LOOCV MSE Model 1:", loocv.err1$delta[1], "\n")
cat("LOOCV MSE Model 2:", loocv.err2$delta[1], "\n")
cat("LOOCV MSE Model 3:", loocv.err3$delta[1], "\n")
# Best model is the one with the lowest MSE
# Set the seed for reproducibility
set.seed(1)
# Compute the 5-fold cross-validation prediction error
kfcv.err1 <- cv.glm(housing.df, glm1, K = 5)
kfcv.err1$delta[1]  # Cross-validated MSE
# Compute the 5-fold cross-validation prediction error
kfcv.err2 <- cv.glm(housing.df, glm2, K = 5)
kfcv.err2$delta[1]  # Cross-validated MSE
# Compute the 5-fold cross-validation prediction error
kfcv.err3 <- cv.glm(housing.df, glm3, K = 5)
kfcv.err3$delta[1]  # Cross-validated MSE
# compute the 5-fold cross-validation predictor error
# cross-validated MSE
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
# Load the necessary libraries
library(boot)
# Load the data
housing.df <- read.csv("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-10/BostonHousing.csv")
# First six rows
head(housing.df)
# Column names
names(housing.df)
# Fit a regression on the training set
glm1 <- glm(MEDV ~ poly(DIS, 3), data = housing.df)
summary(glm1)
# Compute the leave-one-out cross-validation prediction error
loocv.err1 <- cv.glm(housing.df, glm1)
loocv.err1$delta[1]  # Cross-validated MSE
# Fit a regression on the training set
glm2 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4), data = housing.df)
summary(glm2)
# Compute the leave-one-out cross-validation prediction error
loocv.err2 <- cv.glm(housing.df, glm2)
loocv.err2$delta[1]  # Cross-validated MSE
# Fit a regression on the training set
glm3 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4) + poly(CRIM, 5), data = housing.df)
summary(glm3)
# Compute the leave-one-out cross-validation prediction error
loocv.err3 <- cv.glm(housing.df, glm3)
loocv.err3$delta[1]  # Cross-validated MSE
# Compare the MSE for the three models
cat("LOOCV MSE Model 1:", loocv.err1$delta[1], "\n")
cat("LOOCV MSE Model 2:", loocv.err2$delta[1], "\n")
cat("LOOCV MSE Model 3:", loocv.err3$delta[1], "\n")
# Best model is the one with the lowest MSE
# Set the seed for reproducibility
set.seed(1)
# Compute the 5-fold cross-validation prediction error
kfcv.err1 <- cv.glm(housing.df, glm1, K = 5)
kfcv.err1$delta[1]  # Cross-validated MSE
# Compute the 5-fold cross-validation prediction error
kfcv.err2 <- cv.glm(housing.df, glm2, K = 5)
kfcv.err2$delta[1]  # Cross-validated MSE
# Compute the 5-fold cross-validation prediction error
kfcv.err3 <- cv.glm(housing.df, glm3, K = 5)
kfcv.err3$delta[1]  # Cross-validated MSE
# Compare the MSE for the three models
cat("5-fold CV MSE Model 1:", kfcv.err1$delta[1], "\n")
cat("5-fold CV MSE Model 2:", kfcv.err2$delta[1], "\n")
cat("5-fold CV MSE Model 3:", kfcv.err3$delta[1], "\n")
# Best model is the one with the lowest MSE
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(boot)
# Load the data
housing.df <- read.csv("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-10/BostonHousing.csv")
# First six rows
head(housing.df)
# Column names
names(housing.df)
# fit a regression on the training set
glm1 <- glm(MEDV ~ poly(DIS, 3), data = housing.df)
summary(glm1)
# compute the leave-one-out cross-validation predictor error
loocv.err1 <- cv.glm(housing.df, glm1)
# cross-validated MSE
loocv.err1$delta[1]
# fit a regression on the training set
glm2 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4), data = housing.df)
summary(glm2)
# compute the leave-one-out cross-validation predictor error
loocv.err2 <- cv.glm(housing.df, glm2)
# cross-validated MSE
loocv.err2$delta[1]
# fit a regression on the training set
glm3 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4) + poly(CRIM, 5), data = housing.df)
summary(glm3)
# compute the leave-one-out cross-validation predictor error
loocv.err3 <- cv.glm(housing.df, glm3)
# cross-validated MSE
loocv.err3$delta[1]
# which model is best for predicting median home values?
cat("LOOCV MSE Model 1:", loocv.err1$delta[1], "\n")
cat("LOOCV MSE Model 2:", loocv.err2$delta[1], "\n")
cat("LOOCV MSE Model 3:", loocv.err3$delta[1], "\n")
# compute the 5-fold cross-validation predictor error
set.seed(1)
kfcv.err1 <- cv.glm(housing.df, glm1, K = 5)
# cross-validated MSE
kfcv.err1$delta[1]
# compute the 5-fold cross-validation predictor error
kfcv.err2 <- cv.glm(housing.df, glm2, K = 5)
# cross-validated MSE
kfcv.err2$delta[1]
# compute the 5-fold cross-validation predictor error
kfcv.err3 <- cv.glm(housing.df, glm3, K = 5)
# cross-validated MSE
kfcv.err3$delta[1]
# which model is best for predicting median home values?
cat("5-fold CV MSE Model 1:", kfcv.err1$delta[1], "\n")
cat("5-fold CV MSE Model 2:", kfcv.err2$delta[1], "\n")
cat("5-fold CV MSE Model 3:", kfcv.err3$delta[1], "\n")
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(boot)
# Load the data
housing.df <- read.csv("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-10/BostonHousing.csv")
# First six rows
head(housing.df)
# Column names
names(housing.df)
# fit a regression on the training set
glm1 <- glm(MEDV ~ poly(DIS, 3), data = housing.df)
summary(glm1)
# compute the leave-one-out cross-validation predictor error
loocv.err1 <- cv.glm(housing.df, glm1)
# cross-validated MSE
loocv.err1$delta[1]
# fit a regression on the training set
glm2 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4), data = housing.df)
summary(glm2)
# compute the leave-one-out cross-validation predictor error
loocv.err2 <- cv.glm(housing.df, glm2)
# cross-validated MSE
loocv.err2$delta[1]
# fit a regression on the training set
glm3 <- glm(MEDV ~ poly(DIS, 3) + poly(NOX, 4) + poly(CRIM, 5), data = housing.df)
summary(glm3)
# compute the leave-one-out cross-validation predictor error
loocv.err3 <- cv.glm(housing.df, glm3)
# cross-validated MSE
loocv.err3$delta[1]
# which model is best for predicting median home values?
cat("LOOCV MSE Model 1:", loocv.err1$delta[1], "\n")
cat("LOOCV MSE Model 2:", loocv.err2$delta[1], "\n")
cat("LOOCV MSE Model 3:", loocv.err3$delta[1], "\n")
# compute the 5-fold cross-validation predictor error
set.seed(1)
kfcv.err1 <- cv.glm(housing.df, glm1, K = 5)
# cross-validated MSE
kfcv.err1$delta[1]
# compute the 5-fold cross-validation predictor error
kfcv.err2 <- cv.glm(housing.df, glm2, K = 5)
# cross-validated MSE
kfcv.err2$delta[1]
# compute the 5-fold cross-validation predictor error
kfcv.err3 <- cv.glm(housing.df, glm3, K = 5)
# cross-validated MSE
kfcv.err3$delta[1]
# which model is best for predicting median home values?
cat("5-fold CV MSE Model 1:", kfcv.err1$delta[1], "\n")
cat("5-fold CV MSE Model 2:", kfcv.err2$delta[1], "\n")
cat("5-fold CV MSE Model 3:", kfcv.err3$delta[1], "\n")
