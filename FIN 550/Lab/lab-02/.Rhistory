# (a) and (b)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
# Using head function
head(trends_csv, 3)
# Using index notation
trends_csv[1:3, ]
# Load necessary libraries
library(readr)
# Load the CSV file, skipping the first two rows which contain metadata and incorrect headers
file_path <- "/Users/iveshe/Desktop/Term 1/FIN 550/Lab/lab-02/20160819_OlympicSportsByCountries.csv"
trends_csv <- read.csv(file_path, skip = 2, header = FALSE, stringsAsFactors = FALSE)
# Assign correct column names to the data
colnames(trends_csv) <- c("Country", "Search_Interest", "Sport")
# Filter out rows where "Search_Interest" is not numeric
trends_csv <- trends_csv[!is.na(suppressWarnings(as.numeric(trends_csv$Search_Interest))), ]
# Convert "Search_Interest" column to numeric
trends_csv$Search_Interest <- as.numeric(trends_csv$Search_Interest)
# Subset the data to include only rows where the Country is "China"
china_sports <- subset(trends_csv, Country == "China")
# Find the sport with the highest search interest in China
most_searched_sport <- china_sports$Sport[which.max(china_sports$Search_Interest)]
# Print the most searched sport in China
print(most_searched_sport)
top_sport <- function(country) {
country_sports <- trends_csv[trends_csv$Country == country, ]
most_searched_sport <- country_sports[which.max(country_sports$`Search Interest`), "Sport"]
print(most_searched_sport)
}
top_sport("United States")
top_sport("China")
top_sport("Russia")
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
library(readr)
# Read the CSV file into a data frame
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
# Preview the first three rows using the head function
head(trends_csv, 3)
# Preview the first three rows using index notation
trends_csv[1:3, ]
# Select all rows where the country is China
china_data <- subset(trends_csv, Country == "China")
# Print the data for China
print(china_data)
# Find the most searched for sport in China
most_searched_sport_china <- china_data$Sport[which.max(china_data$`Search Interest`)]
print(most_searched_sport_china)
top_sport <- function(country_name) {
# Subset the data for the given country
country_data <- subset(trends_csv, Country == country_name)
# Find the most searched for sport in the given country
most_searched_sport <- country_data$Sport[which.max(country_data$`Search Interest`)]
# Print the result
print(most_searched_sport)
}
# Test the function
top_sport("United States")
top_sport("China")
top_sport("Russia")
my_variable <- 10
print(my_variable)
0.3 + 0.6 == 0.9
all.equal(0.3 + 0.6, 0.9)
if (1 > as.numeric(FALSE)) {
print("1 > FALSE")
} else {
print("1 <= FALSE")
}
for (i in list("a", TRUE, 0)) {
print(i)
}
v <- c(3, 1, 8, 45, 2, 4, 0)
# Use positive integers to subset v to the 2nd and 5th elements
v[c(2, 5)]
# Use negative integers to exclude the 2nd and 5th elements of v
v[-c(2, 5)]
# Use a logical vector to select the first and last elements of v
v[c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)]
# Use the following expression to subset v to elements that are greater than 2
v[v > 2]
# Use the head() function to display the first 6 elements of v
head(v, 6)
# Use the head() function to display the first 3 elements of v
head(v, 3)
y <- c(5, -2, 31, 4, 32, 7, -9)
y_mean <- mean(y)
y_mean
y_error <- y - y_mean
y_error
# (a)
length(y_error) == length(y)
# (b)
abs(mean(y_error)) < .Machine$double.eps
# (a) and (b)
(length(y_error) == length(y)) && (abs(mean(y_error)) < .Machine$double.eps)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
library(readr)
# Read the CSV file into a data frame
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
# Preview the first three rows using the head function
head(trends_csv, 3)
# Preview the first three rows using index notation
trends_csv[1:3, ]
# Select all rows where the country is China
china_data <- subset(trends_csv, Country == "China")
# Print the data for China
print(china_data)
# Find the most searched for sport in China
most_searched_sport_china <- china_data$Sport[which.max(china_data$`Search Interest`)]
print(most_searched_sport_china)
top_sport <- function(country_name) {
# Subset the data for the given country
country_data <- subset(trends_csv, Country == country_name)
# Find the most searched for sport in the given country
most_searched_sport <- country_data$Sport[which.max(country_data$`Search Interest`)]
# Print the result
print(most_searched_sport)
}
# Test the function
top_sport("United States")
top_sport("China")
top_sport("Russia")
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
- `all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))` returns either `TRUE` or `FALSE` depending on whether the column names match.
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))` returns either `TRUE` or `FALSE` depending on whether the column names match.
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
column_names_verification <- all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
print(paste("Column names verification result:", column_names_verification))
nrow(trends_csv) == 1408
my_variable <- 10
print(my_variable)
0.3 + 0.6 == 0.9
all.equal(0.3 + 0.6, 0.9)
if (1 > as.numeric(FALSE)) {
print("1 > FALSE")
} else {
print("1 <= FALSE")
}
for (i in list("a", TRUE, 0)) {
print(i)
}
v <- c(3, 1, 8, 45, 2, 4, 0)
# Use positive integers to subset v to the 2nd and 5th elements
v[c(2, 5)]
# Use negative integers to exclude the 2nd and 5th elements of v
v[-c(2, 5)]
# Use a logical vector to select the first and last elements of v
v[c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)]
# Use the following expression to subset v to elements that are greater than 2
v[v > 2]
# Use the head() function to display the first 6 elements of v
head(v, 6)
# Use the head() function to display the first 3 elements of v
head(v, 3)
y <- c(5, -2, 31, 4, 32, 7, -9)
y_mean <- mean(y)
y_mean
y_error <- y - y_mean
y_error
# (a)
length(y_error) == length(y)
# (b)
abs(mean(y_error)) < .Machine$double.eps
# (a) and (b)
(length(y_error) == length(y)) && (abs(mean(y_error)) < .Machine$double.eps)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
library(readr)
# Read the CSV file into a data frame
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
# Preview the first three rows using the head function
head(trends_csv, 3)
# Preview the first three rows using index notation
trends_csv[1:3, ]
# Select all rows where the country is China
china_data <- subset(trends_csv, Country == "China")
# Print the data for China
print(china_data)
# Find the most searched for sport in China
most_searched_sport_china <- china_data$Sport[which.max(china_data$`Search Interest`)]
print(most_searched_sport_china)
top_sport <- function(country_name) {
# Subset the data for the given country
country_data <- subset(trends_csv, Country == country_name)
# Find the most searched for sport in the given country
most_searched_sport <- country_data$Sport[which.max(country_data$`Search Interest`)]
# Print the result
print(most_searched_sport)
}
# Test the function
top_sport("United States")
top_sport("China")
top_sport("Russia")
my_variable <- 10
print(my_variable)
0.3 + 0.6 == 0.9
all.equal(0.3 + 0.6, 0.9)
if (1 > as.numeric(FALSE)) {
print("1 > FALSE")
} else {
print("1 <= FALSE")
}
for (i in list("a", TRUE, 0)) {
print(i)
}
v <- c(3, 1, 8, 45, 2, 4, 0)
# Use positive integers to subset v to the 2nd and 5th elements
v[c(2, 5)]
# Use negative integers to exclude the 2nd and 5th elements of v
v[-c(2, 5)]
# Use a logical vector to select the first and last elements of v
v[c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)]
# Use the following expression to subset v to elements that are greater than 2
v[v > 2]
# Use the head() function to display the first 6 elements of v
head(v, 6)
# Use the head() function to display the first 3 elements of v
head(v, 3)
y <- c(5, -2, 31, 4, 32, 7, -9)
y_mean <- mean(y)
y_mean
y_error <- y - y_mean
y_error
# (a)
length(y_error) == length(y)
# (b)
abs(mean(y_error)) < .Machine$double.eps
# (a) and (b)
(length(y_error) == length(y)) && (abs(mean(y_error)) < .Machine$double.eps)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
my_variable <- 10
print(my_variable)
0.3 + 0.6 == 0.9
all.equal(0.3 + 0.6, 0.9)
if (1 > as.numeric(FALSE)) {
print("1 > FALSE")
} else {
print("1 <= FALSE")
}
for (i in list("a", TRUE, 0)) {
print(i)
}
v <- c(3, 1, 8, 45, 2, 4, 0)
# Use positive integers to subset v to the 2nd and 5th elements
v[c(2, 5)]
# Use negative integers to exclude the 2nd and 5th elements of v
v[-c(2, 5)]
# Use a logical vector to select the first and last elements of v
v[c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)]
# Use the following expression to subset v to elements that are greater than 2
v[v > 2]
# Use the head() function to display the first 6 elements of v
head(v, 6)
# Use the head() function to display the first 3 elements of v
head(v, 3)
y <- c(5, -2, 31, 4, 32, 7, -9)
y_mean <- mean(y)
y_mean
y_error <- y - y_mean
y_error
# (a)
length(y_error) == length(y)
# (b)
abs(mean(y_error)) < .Machine$double.eps
# (a) and (b)
(length(y_error) == length(y)) && (abs(mean(y_error)) < .Machine$double.eps)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
library(readr)
# Read the CSV file into a data frame
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
# Preview the first three rows using the head function
head(trends_csv, 3)
# Preview the first three rows using index notation
trends_csv[1:3, ]
# Select all rows where the country is China
china_data <- subset(trends_csv, Country == "China")
# Print the data for China
print(china_data)
# Find the most searched for sport in China
most_searched_sport_china <- china_data$Sport[which.max(china_data$`Search Interest`)]
print(most_searched_sport_china)
top_sport <- function(country_name) {
# Subset the data for the given country
country_data <- subset(trends_csv, Country == country_name)
# Find the most searched for sport in the given country
most_searched_sport <- country_data$Sport[which.max(country_data$`Search Interest`)]
# Print the result
print(most_searched_sport)
}
# Test the function
top_sport("United States")
top_sport("China")
top_sport("Russia")
my_variable <- 10
print(my_variable)
0.3 + 0.6 == 0.9
all.equal(0.3 + 0.6, 0.9)
if (1 > as.numeric(FALSE)) {
print("1 > FALSE")
} else {
print("1 <= FALSE")
}
for (i in list("a", TRUE, 0)) {
print(i)
}
v <- c(3, 1, 8, 45, 2, 4, 0)
# Use positive integers to subset v to the 2nd and 5th elements
v[c(2, 5)]
# Use negative integers to exclude the 2nd and 5th elements of v
v[-c(2, 5)]
# Use a logical vector to select the first and last elements of v
v[c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)]
# Use the following expression to subset v to elements that are greater than 2
v[v > 2]
# Use the head() function to display the first 6 elements of v
head(v, 6)
# Use the head() function to display the first 3 elements of v
head(v, 3)
y <- c(5, -2, 31, 4, 32, 7, -9)
y_mean <- mean(y)
y_mean
y_error <- y - y_mean
y_error
# (a)
length(y_error) == length(y)
# (b)
abs(mean(y_error)) < .Machine$double.eps
# (a) and (b)
(length(y_error) == length(y)) && (abs(mean(y_error)) < .Machine$double.eps)
y_abs_error <- abs(y_error)
mean(y_abs_error)
# Define the function to use a default value of x = 2
to_zero <- function(x = 2) {
if (x > 0) {
return(x - 1)
} else if (x < 0) {
return(x + 1)
} else {
return(0)
}
}
# Evaluate the function with no argument. Also evaluate the function at the values 1, 0, and -1.
to_zero()
to_zero(1)
to_zero(0)
to_zero(-1)
library(readr)
url <- "https://raw.githubusercontent.com/googletrends/data/master/20160819_OlympicSportsByCountries.csv"
trends_csv <- read_csv(url, skip = 2)
# Verify the column names and number of rows
all.equal(names(trends_csv), c("Country", "Search Interest", "Sport"))
nrow(trends_csv) == 1408
# Preview the first three rows using the head function
head(trends_csv, 3)
# Preview the first three rows using index notation
trends_csv[1:3, ]
# Select all rows where the country is China
china_data <- subset(trends_csv, Country == "China")
# Print the data for China
print(china_data)
# Find the most searched for sport in China
most_searched_sport_china <- china_data$Sport[which.max(china_data$`Search Interest`)]
print(most_searched_sport_china)
top_sport <- function(country_name) {
# Subset the data for the given country
country_data <- subset(trends_csv, Country == country_name)
# Find the most searched for sport in the given country
most_searched_sport <- country_data$Sport[which.max(country_data$`Search Interest`)]
# Print the result
print(most_searched_sport)
}
# Test the function
top_sport("United States")
top_sport("China")
top_sport("Russia")
# Define an atomic vector
x_vector = c(2, 4, 6, 8)
# Define a named list
x_list = list(Name = c("Riley", "League"),
Subject = "FIN", Number = 550)
