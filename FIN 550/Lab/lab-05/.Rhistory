ggplot(default_by_month, aes(x = date, y = default_rate)) +
geom_line(color = "firebrick") +
labs(title = "Default Rates Over Time", x = "Month", y = "Default Rate") +
theme_minimal(base_size = 15) +
scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Scatter plot of default rate by credit score
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(color = "firebrick", alpha = 0.5) +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
library(tidyverse)
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE)
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Create the histogram again after filtering NA values
ggplot(filtered_data, aes(x = fico)) +
geom_histogram(binwidth = 5, fill = "firebrick", color = "white") +
labs(title = "Distribution of Credit Scores (FICO)", x = "FICO Score", y = "Count") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Calculate the default rate per state
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default))
# Create bar graph
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +
scale_x_discrete(limits = levels(default_by_state$st)[seq(1, nrow(default_by_state), by = 2)])
#library(maps)
purrr::map(1:5, ~ .x + 1)
maps::map("state")
# Get the map data for US states
states_map <- map_data("state")
# Prepare data for mapping (state names should be matched properly)
state_default_data <- default_by_state %>%
mutate(region = tolower(state.name[match(st, state.abb)]))
# Merge map data with default data
state_default_map <- merge(states_map, state_default_data, by = "region", all.x = TRUE)
# Plot heatmap of default rates
ggplot(state_default_map, aes(long, lat, group = group, fill = default_rate)) +
geom_polygon(color = "white") +
coord_fixed(1.3) +
labs(title = "Default Rates by State (Heat Map)", fill = "Default Rate") +
theme_void()
# Convert the 'svcg_cycle' to date
orig_svcg <- orig_svcg %>%
mutate(date = as.Date(paste0(svcg_cycle, "01"), format = "%Y%m%d"))
# Calculate default rates by month
default_by_month <- orig_svcg %>%
group_by(date) %>%
summarize(default_rate = mean(ever_default))
# Plot line graph of default rates over time
ggplot(default_by_month, aes(x = date, y = default_rate)) +
geom_line(color = "firebrick") +
labs(title = "Default Rates Over Time", x = "Month", y = "Default Rate") +
theme_minimal(base_size = 15) +
scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Scatter plot of default rate by credit score
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(color = "firebrick", alpha = 0.5) +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_jitter(width = 5, height = 0.05, alpha = 0.5) +  # Add jitter
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal()
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(alpha = 0.3, color = "red") +  # Reduce point opacity
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal()
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(alpha = 0.3, color = "red") +
geom_smooth(method = "glm", method.args = list(family = "binomial"), color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal()
# Scatter plot with trendline
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(color = "red", alpha = 0.6) +  # Red points with some transparency
geom_smooth(method = "lm", color = "black") +  # Linear trendline in black
labs(title = "Default Rates by FICO Score", x = "FICO", y = "Default rate") +
theme_minimal(base_size = 15)  # Minimal theme with larger font size
# 只绘制散点图
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(color = "red", alpha = 0.6) +  # 红色的点并带有透明度
labs(title = "Default Rates by FICO Score", x = "FICO", y = "Default rate") +
theme_minimal(base_size = 15)  # 使用简约的主题，并设定字体大小
# Load the Rdata file
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Check the structure of the dataset
str(orig_svcg)
# Inspect the first few rows to verify the variables
head(orig_svcg)
library(tidyverse)
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE)
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Create the histogram again after filtering NA values
ggplot(filtered_data, aes(x = fico)) +
geom_histogram(binwidth = 5, fill = "firebrick", color = "white") +
labs(title = "Distribution of Credit Scores (FICO)", x = "FICO Score", y = "Count") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Calculate the default rate per state
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default))
# Create bar graph
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6))
library(tidyverse)
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE)
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Create the histogram again after filtering NA values
ggplot(filtered_data, aes(x = fico)) +
geom_histogram(binwidth = 5, fill = "firebrick", color = "white") +
labs(title = "Distribution of Credit Scores (FICO)", x = "FICO Score", y = "Count") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Load the forcats package for factor reordering
library(forcats)
# Calculate the default rate per state and reorder states
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default)) %>%
mutate(st = fct_reorder(st, default_rate))
# Create bar graph with reordered states
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6))
# Load the necessary library
library(tidyverse)
# Assuming 'filtered_data' from Problem 2 is already available
# If not, run the following code to create 'filtered_data':
# filtered_data <- orig_svcg %>%
#   filter(first_record == TRUE, !is.na(fico))
# Create bins for FICO scores (e.g., every 10 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 10), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
library(tidyverse)
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE)
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Create the histogram again after filtering NA values
ggplot(filtered_data, aes(x = fico)) +
geom_histogram(binwidth = 5, fill = "firebrick", color = "white") +
labs(title = "Distribution of Credit Scores (FICO)", x = "FICO Score", y = "Count") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Calculate the default rate per state
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default))
# Create bar graph
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +
scale_x_discrete(limits = levels(default_by_state$st)[seq(1, nrow(default_by_state), by = 2)])
# Load the forcats package for factor reordering
library(forcats)
# Calculate the default rate per state and reorder states
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default)) %>%
mutate(st = fct_reorder(st, default_rate))
# Create bar graph with reordered states
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6))
#library(maps)
purrr::map(1:5, ~ .x + 1)
maps::map("state")
# Get the map data for US states
states_map <- map_data("state")
# Prepare data for mapping (state names should be matched properly)
state_default_data <- default_by_state %>%
mutate(region = tolower(state.name[match(st, state.abb)]))
# Merge map data with default data
state_default_map <- merge(states_map, state_default_data, by = "region", all.x = TRUE)
# Plot heatmap of default rates
ggplot(state_default_map, aes(long, lat, group = group, fill = default_rate)) +
geom_polygon(color = "white") +
coord_fixed(1.3) +
labs(title = "Default Rates by State (Heat Map)", fill = "Default Rate") +
theme_void()
# Convert the 'svcg_cycle' to date
orig_svcg <- orig_svcg %>%
mutate(date = as.Date(paste0(svcg_cycle, "01"), format = "%Y%m%d"))
# Calculate default rates by month
default_by_month <- orig_svcg %>%
group_by(date) %>%
summarize(default_rate = mean(ever_default))
# Plot line graph of default rates over time
ggplot(default_by_month, aes(x = date, y = default_rate)) +
geom_line(color = "firebrick") +
labs(title = "Default Rates Over Time", x = "Month", y = "Default Rate") +
theme_minimal(base_size = 15) +
scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Scatter plot of default rate by credit score
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_point(color = "firebrick", alpha = 0.5) +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score", x = "FICO Score", y = "Ever Default") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Load the necessary library
library(tidyverse)
# Assuming 'filtered_data' from Problem 2 is already available
# If not, run the following code to create 'filtered_data':
# filtered_data <- orig_svcg %>%
#   filter(first_record == TRUE, !is.na(fico))
# Create bins for FICO scores (e.g., every 10 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 10), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Scatter plot with jitter
ggplot(filtered_data, aes(x = fico, y = ever_default)) +
geom_jitter(color = "firebrick", alpha = 0.2, width = 0, height = 0.05) +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Ever Default") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Arrange data by FICO score
filtered_data <- filtered_data %>% arrange(fico)
# Calculate rolling average default rate
window_size <- 100  # Adjust window size as needed
default_by_fico <- filtered_data %>%
mutate(roll_mean = zoo::rollmean(ever_default, k = window_size, align = "center", fill = NA),
fico_mid = fico)
# Load the necessary library
library(tidyverse)
# Assuming 'filtered_data' from Problem 2 is already available
# If not, run the following code to create 'filtered_data':
# filtered_data <- orig_svcg %>%
#   filter(first_record == TRUE, !is.na(fico))
# Create bins for FICO scores (e.g., every 10 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 5), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Load the necessary library
library(tidyverse)
# Assuming 'filtered_data' from Problem 2 is already available
# If not, run the following code to create 'filtered_data':
# filtered_data <- orig_svcg %>%
#   filter(first_record == TRUE, !is.na(fico))
# Create bins for FICO scores (e.g., every 10 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 10), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Load the necessary library
library(tidyverse)
# Assuming 'filtered_data' from Problem 2 is already available
# If not, run the following code to create 'filtered_data':
# filtered_data <- orig_svcg %>%
#   filter(first_record == TRUE, !is.na(fico))
# Create bins for FICO scores (e.g., every 10 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 3), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
library(tidyverse)
load("/Users/iveshe/Library/Mobile Documents/com~apple~CloudDocs/Term 1/FIN 550/Lab/lab-05/cleaned_Freddie_Mac.Rdata")
# Filter to only include the first record for each loan
filtered_data <- orig_svcg %>% filter(first_record == TRUE)
# Filter out rows where FICO scores are NA
filtered_data <- filtered_data %>% filter(!is.na(fico))
# Create the histogram again after filtering NA values
ggplot(filtered_data, aes(x = fico)) +
geom_histogram(binwidth = 5, fill = "firebrick", color = "white") +
labs(title = "Distribution of Credit Scores (FICO)", x = "FICO Score", y = "Count") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
# Load forcats
library(forcats)
# Calculate the default rate per state and reorder states
default_by_state <- filtered_data %>%
group_by(st) %>%
summarize(default_rate = mean(ever_default)) %>%
mutate(st = fct_reorder(st, default_rate))
# Create bar graph with reordered states
ggplot(default_by_state, aes(x = st, y = default_rate)) +
geom_bar(stat = "identity", fill = "firebrick", color = "white") +
labs(title = "Default Rates by State", x = "State", y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 6))
#library(maps)
purrr::map(1:5, ~ .x + 1)
maps::map("state")
# Get the map data for US states
states_map <- map_data("state")
# Prepare data for mapping (state names should be matched properly)
state_default_data <- default_by_state %>%
mutate(region = tolower(state.name[match(st, state.abb)]))
# Merge map data with default data
state_default_map <- merge(states_map, state_default_data, by = "region", all.x = TRUE)
# Plot heatmap of default rates
ggplot(state_default_map, aes(long, lat, group = group, fill = default_rate)) +
geom_polygon(color = "white") +
coord_fixed(1.3) +
labs(title = "Default Rates by State (Heat Map)", fill = "Default Rate") +
theme_void()
# Convert the 'svcg_cycle' to date
orig_svcg <- orig_svcg %>%
mutate(date = as.Date(paste0(svcg_cycle, "01"), format = "%Y%m%d"))
# Calculate default rates by month
default_by_month <- orig_svcg %>%
group_by(date) %>%
summarize(default_rate = mean(ever_default))
# Plot line graph of default rates over time
ggplot(default_by_month, aes(x = date, y = default_rate)) +
geom_line(color = "firebrick") +
labs(title = "Default Rates Over Time", x = "Month", y = "Default Rate") +
theme_minimal(base_size = 15) +
scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
# Load tidyverse
library(tidyverse)
# Create bins for FICO scores (e.g., every 3 points)
filtered_data <- filtered_data %>%
mutate(fico_bin = cut(fico, breaks = seq(300, 850, by = 3), right = FALSE))
# Calculate default rates for each FICO bin
default_by_fico <- filtered_data %>%
group_by(fico_bin) %>%
summarize(default_rate = mean(ever_default, na.rm = TRUE)) %>%
# Convert fico_bin to numeric midpoint for plotting
mutate(fico_mid = as.numeric(substr(fico_bin, 2, 4)) + 5)
# Remove any rows with NA in 'fico_mid' or 'default_rate'
default_by_fico <- default_by_fico %>% filter(!is.na(fico_mid), !is.na(default_rate))
# Plot default rate vs. FICO score
ggplot(default_by_fico, aes(x = fico_mid, y = default_rate)) +
geom_point(color = "firebrick") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Default Rate by Credit Score",
x = "FICO Score",
y = "Default Rate") +
theme_minimal(base_size = 15) +
theme(panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
